{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","id","title","completed","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","delTodoProps","style","fontStyle","color","opacity","textDecoration","TodoList","todos","map","Header","isInitialMount","useRef","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","marginBottom","InputTodo","useState","inputText","setinputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","name","target","TodoContainer","setTodos","show","setShow","axios","get","params","_limit","then","response","data","newTodo","uuidv4","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.ffa546d0.chunk.js","sourcesContent":["import React, {useEffect} from \"react\"\r\n\r\nconst TodoItem = props => {\r\n    const complStyle = {\r\n        fontStyle : \"italic\",\r\n        color: \"#d35e0f\",\r\n        opacity: 0.4,\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    const {id,title,completed} = props.todo\r\n    useEffect(()=> {\r\n        return () => {\r\n            alert(\"Item deleted\")\r\n        }\r\n    },[])\r\n    return (\r\n        <li className=\"todo-item\">\r\n            <input type=\"checkbox\" checked={completed} onChange={() => props.handleChangeProps(id)}/>\r\n            <button onClick={() => props.delTodoProps(id)}>Delete</button>\r\n            <span style={completed ? complStyle : null}>{title}</span>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n// import React from \"react\";\r\n// class TodoItem extends React.Component {\r\n//     componentWillUnmount() {\r\n//         alert(\"Item about to be deleted!\");\r\n//       }\r\n//     render() {\r\n//         const complStyle = {\r\n//             fontStyle : \"italic\",\r\n//             color: \"#d35e0f\",\r\n//             opacity: 0.4,\r\n//             textDecoration: \"line-through\",\r\n//         }\r\n//         const {id,title,completed} = this.props.todo\r\n//         return (\r\n//         <li className=\"todo-item\"> <input type=\"checkbox\" checked={completed} onChange={() => this.props.handleChangeProps(id)} /> <button onClick={() => this.props.delTodoProps(id)}>Delete</button>\r\n//             <span style={completed ? complStyle : null}>{title}</span>\r\n//         </li>\r\n//         )\r\n//     }\r\n// }\r\n// export default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nconst TodoList = props => {\r\n    return (\r\n        <div>\r\n            {\r\n            props.todos.map(todo =>(\r\n                <TodoItem key={todo.id} todo={todo} handleChangeProps={props.handleChangeProps} delTodoProps={props.delTodoProps} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default TodoList\r\n// import React from \"react\"\r\n// import TodoItem from \"./TodoItem\"\r\n// class Todolist extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {\r\n//                     this.props.todos.map( todo => (\r\n//                     <TodoItem key={todo.id} todo={todo} handleChangeProps={this.props.handleChangeProps} delTodoProps={this.props.delTodoProps}/>\r\n//                     ))\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// export default Todolist","import React, {useEffect,useRef} from \"react\"\r\n\r\nconst Header = props => {\r\n  const isInitialMount = useRef(true)\r\n  useEffect(() => {\r\n    var x = Math.floor(Math.random() * 256)\r\n    var y = Math.floor(Math.random() * 256)\r\n    var z = Math.floor(Math.random() * 256)\r\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\"\r\n    if(isInitialMount.current) {\r\n        isInitialMount.current = false\r\n    } else {\r\n        document.getElementById(\"inH1\").innerHTML = \"clicked\"\r\n    document.getElementById(\"inH1\").style.backgroundColor = bgColor\r\n     }\r\n  }, [props.headerSpan])\r\n\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"2em\",\r\n  }\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n        Simple Todo App <span id=\"inH1\"></span>\r\n      </h1>\r\n      <p style={{ fontSize: \"19px\" }}>\r\n        Please add to-dos item(s) through the input field\r\n      </p>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n// import React, { Component } from \"react\";\r\n\r\n// class Header extends Component {\r\n\r\n//     componentDidUpdate(prevProps,prevState) {\r\n//         var x = Math.floor(Math.random() * 256);\r\n//         var y = Math.floor(Math.random() * 256);\r\n//         var z = Math.floor(Math.random() * 256);\r\n//         var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n//         if (prevProps.headerSpan !== this.props.headerSpan) {\r\n//             document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n//             document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n//         }\r\n//     }\r\n\r\n//     render () {\r\n//         const headerStyle = {\r\n//             padding: \"20px 0\",\r\n//             lineHeight: \"2em\",\r\n//         }\r\n//         return (\r\n//             <header style={headerStyle}>\r\n//                 <h1 style={{ fontSize:\"26px\", marginBottom: \"15px\"}}>Simple Todo App\r\n//                     <span id=\"inH1\"></span>\r\n//                 </h1>\r\n//                 <p style={{fontSize:\"19px\"}}>Please add to-dos items</p>\r\n//             </header>\r\n//         )\r\n//     }\r\n// }\r\n// export default Header","import React, { useState } from \"react\"\r\n\r\nconst InputTodo = props => {\r\n    const [inputText, setinputText] = useState({\r\n        title : \"\",\r\n    })\r\n\r\n    const onChange = e => {\r\n        setinputText({\r\n            ...inputText,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        props.addTodoProps(inputText.title)\r\n        setinputText({\r\n            title: \"\",\r\n        })\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input type=\"text\" className=\"input-text\" placeholder=\"Add todo...\" value={inputText.title} name=\"title\" onChange={onChange}/>\r\n            <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputTodo\r\n// import React, { Component } from \"react\";\r\n\r\n// class InputTodo extends Component {\r\n//     state = {\r\n//         title: \"\",\r\n//     };\r\n//     onChange = e => {\r\n//         this.setState({\r\n//             [e.target.name]: e.target.value,\r\n//         });\r\n//     }\r\n//     handleSubmit = e => {\r\n//         e.preventDefault();\r\n//         this.props.addTodoProps(this.state.title);\r\n//         this.setState({\r\n//             title: \"\"\r\n//         });\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n//                 <input type=\"text\" className=\"input-text\" placeholder=\"Add Todo...\" name=\"title\" value={this.state.title} onChange={this.onChange}/>\r\n//                 <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default InputTodo","import React, { useState, useEffect  } from \"react\"\r\nimport TodoList from \"./TodoList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport axios from \"axios\"\r\n\r\nconst TodoContainer = props => {\r\n    const [todos, setTodos] = useState([])\r\n    const[show, setShow] = useState(false)\r\n\r\n    const handleChange = id => {\r\n        setTodos(\r\n            todos.map(todo =>{\r\n                if(todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n        setShow(!show)\r\n    }\r\n\r\n    const delTodo = id => {\r\n        setTodos([\r\n            ...todos.filter(todo=>{\r\n                return todo.id !== id\r\n            }),\r\n        ])\r\n    }\r\n\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        }\r\n        setTodos([...todos,newTodo])\r\n    }\r\n    useEffect(() => {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\", {\r\n            params : {\r\n                _limit: 2\r\n            }\r\n        }).then(response => setTodos(response.data))\r\n      },[])\r\n    return (\r\n        <div className=\"container\">\r\n            <Header headerSpan={show}/>\r\n            <InputTodo addTodoProps={addTodoItem} />\r\n            <TodoList todos={todos} handleChangeProps={handleChange} delTodoProps={delTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoContainer\r\n\r\n// import React, {useState} from \"react\";\r\n// import axios from \"axios\"\r\n// import Header from \"./Header\"\r\n// import TodoList from \"./TodoList\"\r\n// import InputTodo from \"./InputTodo\"\r\n// class TodoContainer extends React.Component {\r\n//     state = {\r\n//         todos : [],\r\n//         show: false\r\n//     }\r\n//     handleChange = id => {\r\n//         this.setState({\r\n//           todos: this.state.todos.map(todo => {\r\n//             if (todo.id === id) {\r\n//               todo.completed = !todo.completed\r\n//             }\r\n//             return todo\r\n//           }),\r\n//           show: !this.state.show,\r\n//         })\r\n//       }\r\n//     delTodo = id => {\r\n\r\n//         axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n//         .then(response => {\r\n//             this.setState({\r\n//                 todos: [\r\n//                     ...this.state.todos.filter(todo => {\r\n//                         return todo.id !== id;\r\n//                     })\r\n//                 ]\r\n//             });\r\n//         })\r\n\r\n//         // this.setState({\r\n//         //     todos: [\r\n//         //         ...this.state.todos.filter(todo => {\r\n//         //             return todo.id !== id;\r\n//         //         })\r\n//         //     ]\r\n//         // });\r\n//     };\r\n//     addTodoItem = title => {\r\n//         // const newTodo = {\r\n//         //     id: uuidv4(),\r\n//         //     title: title,\r\n//         //     completed: false\r\n//         // };\r\n//         axios.post(\"https://jsonplaceholder.typicode.com/todos\",{\r\n//             title: title,\r\n//             completed: false,\r\n//         }).then( response =>\r\n//             this.setState({\r\n//                 todos: [...this.state.todos,response.data],\r\n//             })\r\n//         )\r\n//     }\r\n//     componentDidMount() {\r\n//         axios.get(\"https://jsonplaceholder.typicode.com/todos\",{\r\n//             params: {\r\n//                 _limit:10\r\n//             }\r\n//         }).then(response => this.setState({todos:response.data}))\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <Header headerSpan={this.state.show}/>\r\n//                 <InputTodo addTodoProps={this.addTodoItem}/>\r\n//                 <TodoList todos={this.state.todos} handleChangeProps={this.handleChange} delTodoProps={this.delTodo}/>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// export default TodoContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\n//component files\nimport TodoContainer from \"./components/TodoContainer\"\nimport \"./App.css\"\n\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))\n"],"sourceRoot":""}